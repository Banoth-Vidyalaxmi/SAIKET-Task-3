<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simple Contact Book</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #4361ee;
            --secondary: #3f37c9;
            --success: #4cc9f0;
            --danger: #f72585;
            --light: #f8f9fa;
            --dark: #212529;
            --gray: #6c757d;
            --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            color: var(--dark);
            line-height: 1.6;
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        header {
            text-align: center;
            margin-bottom: 30px;
            padding: 20px;
            background: white;
            border-radius: 10px;
            box-shadow: var(--shadow);
        }
        
        h1 {
            color: var(--primary);
            margin-bottom: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }
        
        .app-container {
            display: grid;
            grid-template-columns: 1fr 2fr;
            gap: 20px;
        }
        
        @media (max-width: 768px) {
            .app-container {
                grid-template-columns: 1fr;
            }
        }
        
        .card {
            background: white;
            border-radius: 10px;
            box-shadow: var(--shadow);
            padding: 20px;
            margin-bottom: 20px;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: 600;
            color: var(--dark);
        }
        
        input {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
            transition: border 0.3s;
        }
        
        input:focus {
            border-color: var(--primary);
            outline: none;
            box-shadow: 0 0 0 2px rgba(67, 97, 238, 0.2);
        }
        
        .btn {
            padding: 12px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            transition: all 0.3s;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }
        
        .btn-primary {
            background: var(--primary);
            color: white;
        }
        
        .btn-primary:hover {
            background: var(--secondary);
        }
        
        .btn-danger {
            background: var(--danger);
            color: white;
        }
        
        .btn-danger:hover {
            background: #d11467;
        }
        
        .btn-block {
            display: block;
            width: 100%;
        }
        
        .search-box {
            display: flex;
            margin-bottom: 20px;
        }
        
        .search-box input {
            flex: 1;
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }
        
        .search-box button {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }
        
        .contacts-list {
            max-height: 600px;
            overflow-y: auto;
        }
        
        .contact-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px;
            border-bottom: 1px solid #eee;
            transition: background 0.3s;
        }
        
        .contact-item:hover {
            background: #f8f9fa;
        }
        
        .contact-info h3 {
            margin-bottom: 5px;
            color: var(--primary);
        }
        
        .contact-info p {
            color: var(--gray);
            margin-bottom: 3px;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .contact-actions {
            display: flex;
            gap: 10px;
        }
        
        .empty-state {
            text-align: center;
            padding: 40px 20px;
            color: var(--gray);
        }
        
        .empty-state i {
            font-size: 50px;
            margin-bottom: 15px;
            color: #ddd;
        }
        
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 5px;
            color: white;
            font-weight: 600;
            box-shadow: var(--shadow);
            z-index: 1000;
            transform: translateX(150%);
            transition: transform 0.3s;
        }
        
        .notification.show {
            transform: translateX(0);
        }
        
        .notification.success {
            background: var(--success);
        }
        
        .notification.error {
            background: var(--danger);
        }
        
        .stats {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
            padding-top: 15px;
            border-top: 1px solid #eee;
            font-weight: 600;
            color: var(--gray);
        }
        
        .contact-count {
            color: var(--primary);
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1><i class="fas fa-address-book"></i> Simple Contact Book</h1>
            <p>Manage your contacts easily</p>
        </header>
        
        <div class="app-container">
            <div class="left-panel">
                <div class="card">
                    <h2><i class="fas fa-user-plus"></i> Add New Contact</h2>
                    <form id="contact-form">
                        <div class="form-group">
                            <label for="name">Full Name</label>
                            <input type="text" id="name" placeholder="Enter full name" required>
                        </div>
                        <div class="form-group">
                            <label for="phone">Phone Number</label>
                            <input type="tel" id="phone" placeholder="Enter phone number" required>
                        </div>
                        <div class="form-group">
                            <label for="email">Email Address</label>
                            <input type="email" id="email" placeholder="Enter email address" required>
                        </div>
                        <button type="submit" class="btn btn-primary btn-block">
                            <i class="fas fa-save"></i> Save Contact
                        </button>
                    </form>
                </div>
                
                <div class="card">
                    <h2><i class="fas fa-search"></i> Search Contacts</h2>
                    <div class="search-box">
                        <input type="text" id="search-input" placeholder="Search by name...">
                        <button id="search-btn" class="btn btn-primary">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                    <button id="clear-search" class="btn btn-block">
                        <i class="fas fa-times"></i> Clear Search
                    </button>
                </div>
            </div>
            
            <div class="right-panel">
                <div class="card">
                    <h2><i class="fas fa-users"></i> All Contacts</h2>
                    <div class="contacts-list" id="contacts-list">
                        <!-- Contacts will be dynamically added here -->
                    </div>
                    <div class="stats">
                        <span>Total Contacts:</span>
                        <span class="contact-count" id="contact-count">0</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div id="notification" class="notification"></div>

    <script>
        // DOM Elements
        const contactForm = document.getElementById('contact-form');
        const contactsList = document.getElementById('contacts-list');
        const searchInput = document.getElementById('search-input');
        const searchBtn = document.getElementById('search-btn');
        const clearSearchBtn = document.getElementById('clear-search');
        const contactCount = document.getElementById('contact-count');
        const notification = document.getElementById('notification');
        
        // Contacts array
        let contacts = [];
        let filteredContacts = [];
        
        // Initialize the app
        document.addEventListener('DOMContentLoaded', () => {
            loadContactsFromStorage();
            renderContacts();
            
            // Event Listeners
            contactForm.addEventListener('submit', handleAddContact);
            searchBtn.addEventListener('click', handleSearch);
            clearSearchBtn.addEventListener('click', clearSearch);
            searchInput.addEventListener('keyup', (e) => {
                if (e.key === 'Enter') {
                    handleSearch();
                }
            });
        });
        
        // Load contacts from localStorage
        function loadContactsFromStorage() {
            const storedContacts = localStorage.getItem('contacts');
            if (storedContacts) {
                contacts = JSON.parse(storedContacts);
            }
        }
        
        // Save contacts to localStorage
        function saveContactsToStorage() {
            localStorage.setItem('contacts', JSON.stringify(contacts));
        }
        
        // Handle form submission
        function handleAddContact(e) {
            e.preventDefault();
            
            const name = document.getElementById('name').value.trim();
            const phone = document.getElementById('phone').value.trim();
            const email = document.getElementById('email').value.trim();
            
            // Basic validation
            if (!name || !phone || !email) {
                showNotification('Please fill in all fields', 'error');
                return;
            }
            
            // Check if contact already exists
            const existingContact = contacts.find(contact => 
                contact.phone === phone || contact.email === email
            );
            
            if (existingContact) {
                showNotification('Contact with this phone or email already exists', 'error');
                return;
            }
            
            // Create new contact
            const newContact = {
                id: Date.now().toString(),
                name,
                phone,
                email
            };
            
            contacts.push(newContact);
            saveContactsToStorage();
            renderContacts();
            contactForm.reset();
            
            showNotification('Contact added successfully!', 'success');
        }
        
        // Handle search
        function handleSearch() {
            const searchTerm = searchInput.value.trim().toLowerCase();
            
            if (!searchTerm) {
                renderContacts();
                return;
            }
            
            filteredContacts = contacts.filter(contact => 
                contact.name.toLowerCase().includes(searchTerm)
            );
            
            renderContacts(filteredContacts);
        }
        
        // Clear search
        function clearSearch() {
            searchInput.value = '';
            renderContacts();
        }
        
        // Delete contact
        function deleteContact(id) {
            if (confirm('Are you sure you want to delete this contact?')) {
                contacts = contacts.filter(contact => contact.id !== id);
                saveContactsToStorage();
                renderContacts();
                showNotification('Contact deleted successfully!', 'success');
            }
        }
        
        // Render contacts to the UI
        function renderContacts(contactsToRender = contacts) {
            contactsList.innerHTML = '';
            
            if (contactsToRender.length === 0) {
                contactsList.innerHTML = `
                    <div class="empty-state">
                        <i class="fas fa-user-slash"></i>
                        <h3>No contacts found</h3>
                        <p>${contacts.length === 0 ? 'Add your first contact using the form' : 'No contacts match your search'}</p>
                    </div>
                `;
            } else {
                contactsToRender.forEach(contact => {
                    const contactElement = document.createElement('div');
                    contactElement.className = 'contact-item';
                    contactElement.innerHTML = `
                        <div class="contact-info">
                            <h3>${contact.name}</h3>
                            <p><i class="fas fa-phone"></i> ${contact.phone}</p>
                            <p><i class="fas fa-envelope"></i> ${contact.email}</p>
                        </div>
                        <div class="contact-actions">
                            <button class="btn btn-danger" onclick="deleteContact('${contact.id}')">
                                <i class="fas fa-trash"></i>
                            </button>
                        </div>
                    `;
                    contactsList.appendChild(contactElement);
                });
            }
            
            contactCount.textContent = contacts.length;
        }
        
        // Show notification
        function showNotification(message, type) {
            notification.textContent = message;
            notification.className = `notification ${type} show`;
            
            setTimeout(() => {
                notification.classList.remove('show');
            }, 3000);
        }
    </script>
</body>
</html>